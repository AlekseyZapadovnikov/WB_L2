package main

func main() {
  ch := make(chan int)
  go func() {
    for i := 0; i < 10; i++ {
      ch <- i
    }
  }()
  for n := range ch {
    println(n)
  }
}

/*
когда впервые увидел это задание - расстроился немного, потому что я подумал,
что я не знаю какую-то синтаксическую особенность языка, но теперь я знаю, что это не скомпилится)

я пологаю, что должно быть как-то так (я исправил код)

в таком случае будет дедлок (all goroutines are asleep - deadlock!), потому что чтение из канала это блокирующая операция
подробно:
1) запускаем 2 горутину, которая пишет в канал 10 чисел
2) главная горутина начинает читать из этого канала данные пока он не закроется
3) он блокируется и ждёт данные, если их в канале нет
4) 2 горутина пишет в канал, 1 читает, это происходит паралельно
5) 2 горутина дописала все данные и умерла
6) 1 горутина продолжает читать из канала, но там уже нет данных и в него никто не пишет
получается основная горутина (главная, та в которой функция мэйн) заблокировалась, потому что чтение из канала это блокирующая операция - это дедлок
*/